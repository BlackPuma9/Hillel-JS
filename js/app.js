'use strict'

// Вивести числа від 20 до 30 через пропуск, використовуючи крок 0,5 (20 20,5 21 21,5….).
// Version 1
// const res = []
// for (let i = 20; i <= 30; i += 0.5) {
//     res.push(i)
// }
// console.log(res.join(', '))

// Version 2
// let result = ''
// for (let i = 20; i <= 30; i += 0.5) {
//     result = result + (i === 30 ? i : i + ', ')
// }
// console.log(result)

// Один долар коштує 27 гривень. Вивести дані з розрахунком вартості 10, 20, 30... 100 доларів.
// for (let i = 10; i <= 100; i += 10) {
//     console.log(`${i * 27}`)
// }

// Дане ціле число. Вивести всі цілі числа від 1 до 100, квадрат яких не перевищує числа N.
// const num = 10
// const mathSqr = Math.pow(num, 2)
// let result = ''
//
// for (let i = 1; i <= 100; i++) {
//     if (i <= mathSqr) {
//         result = result + (i === mathSqr ? i : i + ', ')
//     }
// }
// console.log(result)

// Дане ціле число. З'ясувати, чи є воно простим (простим називається число, більше 1, які не мають інших дільників крім 1 і себе).
// const num = 3
// let arr = []
//
// breakLoop: for (let i = 2; i <= num; i++) {
//     if (num % i === 0) {
//         arr.push(i)
//     }
//     for (let j = 0; j <= arr.length - 1; j++) {
//         if (num === arr[j]) {
//             console.log(`${num}: просте число`)
//         } else {
//             console.log(`${num}:складне число`)
//             break breakLoop
//         }
//     }
// }

// Дане деяке число. Визначити, чи можна одержати це число шляхом зведення числа 3 у деякий ступінь. (Наприклад, числа 9, 81 можна отримати, а 13 - не можна).
// let num = 13

// while (num % 3 === 0) {
//     num = num / 3
// }
// console.log(
//     num === 1
//         ? 'Можна одержати це число шляхом зведення числа 3 у деякий ступінь'
//         : 'Не можна одержати це число шляхом зведення числа 3 у деякий ступінь'
// )
